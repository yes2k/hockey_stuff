rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")))
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
gid <- "2018020002"
rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")))
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
gid <- "2018020003"
rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
gid <- "2018020004"
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")))
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
gid <- "2018020004"
rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- exp(predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id"))))
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
gid <- "2018020004"
rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
knitr::opts_chunk$set(echo = TRUE)
library(RCurl); library(xml2); library(rvest); library(jsonlite); library(foreach)
library(lubridate)
library(tidyverse)
library(googledrive)
library(arm)
library(caret)
library(glmnet)
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- exp(predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id"))))
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
gid <- "2018020005"
rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp$home_team)
dmy2 <- dummyVars("~away_team", data=new_pbp$away_team)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp$home_team))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp$away_team))
print(home_team_dummy)
new_pbp <- new_pbp %>% dplyr::select("game_id", "game_seconds", "GF",
"GA", "game_seconds", "num_home_players",
"num_away_players")
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp)
dmy2 <- dummyVars("~away_team", data=new_pbp)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp$home_team))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp$away_team))
print(home_team_dummy)
new_pbp <- new_pbp %>% dplyr::select("game_id", "game_seconds", "GF",
"GA", "game_seconds", "num_home_players",
"num_away_players")
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp)
dmy2 <- dummyVars("~away_team", data=new_pbp)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
print(home_team_dummy)
new_pbp <- new_pbp %>% dplyr::select("game_id", "game_seconds", "GF",
"GA", "game_seconds", "num_home_players",
"num_away_players")
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp)
dmy2 <- dummyVars("~away_team", data=new_pbp)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
new_pbp <- bind_cols(new_pbp, home_team_dummy, away_team_dummy)
print(home_team_dummy)
new_pbp <- new_pbp %>% dplyr::select("game_id", "game_seconds", "GF",
"GA", "game_seconds", "num_home_players",
"num_away_players")
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp)
dmy2 <- dummyVars("~away_team", data=new_pbp)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
new_pbp <- bind_cols(new_pbp, home_team_dummy, away_team_dummy)
print(colnames(new_pbp))
new_pbp <- new_pbp %>%
dplyr::select("game_id", "game_seconds", "GF",
"GA", "game_seconds", "num_home_players",
"num_away_players")
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp)
dmy2 <- dummyVars("~away_team", data=new_pbp)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
new_pbp <- bind_cols(new_pbp, home_team_dummy, away_team_dummy)
print(colnames(new_pbp))
new_pbp <- new_pbp %>% dplyr::select(-c("home_team", "away_team", "event_type", "game_strength_state"))
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
y <- game_info %>% mutate(home_team_win=ifelse(home_score>away_score, 1, 0)) %>%
dplyr::select("game_id","home_team_win")
df <- inner_join(y, new_pbp)
model <- glm(home_team_win~., data=df %>% dplyr::select(-c("game_id")), family="binomial")
summary(model)
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- exp(predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id"))))
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
gid <- "2018020005"
rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp, fullRank = F)
dmy2 <- dummyVars("~away_team", data=new_pbp, fullRank = F)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
new_pbp <- bind_cols(new_pbp, home_team_dummy, away_team_dummy)
print(colnames(new_pbp))
new_pbp <- new_pbp %>% dplyr::select(-c("home_team", "away_team", "event_type", "game_strength_state"))
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
y <- game_info %>% mutate(home_team_win=ifelse(home_score>away_score, 1, 0)) %>%
dplyr::select("game_id","home_team_win")
df <- inner_join(y, new_pbp)
model <- glmnet(home_team_win~., data=df %>% dplyr::select(-c("game_id")), family="binomial")
knitr::opts_chunk$set(echo = TRUE)
library(RCurl); library(xml2); library(rvest); library(jsonlite); library(foreach)
library(lubridate)
library(tidyverse)
library(googledrive)
library(arm)
library(caret)
library(glmnet)
events_summary <- read_csv("data/events_summary_df.csv")
game_info <- read_csv("data/game_info_df.csv")
pbp_base <- read_csv("data/pbp_base.csv")
pbp_extras <- read_csv("data/pbp_extras.csv")
player_periods <- read_csv("data/player_periods.csv")
player_shifts <- read_csv("data/player_shifts.csv")
report <- read_csv("data/report.csv")
roster <- read_csv("data/roster_df.csv")
scratches <- read_csv("data/scratches_df.csv")
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
dmy1 <- dummyVars("~home_team", data=new_pbp, fullRank = F)
dmy2 <- dummyVars("~away_team", data=new_pbp, fullRank = F)
home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
new_pbp <- bind_cols(new_pbp, home_team_dummy, away_team_dummy)
new_pbp <- new_pbp %>% dplyr::select(-c("home_team", "away_team", "event_type", "game_strength_state"))
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
y <- game_info %>% mutate(home_team_win=ifelse(home_score>away_score, 1, 0)) %>%
dplyr::select("game_id","home_team_win")
df <- inner_join(y, new_pbp)
model <- glmnet(home_team_win~., data=df %>% dplyr::select(-c("game_id")), family="binomial")
y <- game_info %>% mutate(home_team_win=ifelse(home_score>away_score, 1, 0)) %>%
dplyr::select("game_id","home_team_win")
df <- inner_join(y, new_pbp)
X <- model.matrix(home_team_win~., df)[, -1]
y <- new_pbp$home_team_win
glmnet(X, y, alpha=0, family = "binomial")
y <- df$home_team_win
y <- game_info %>% mutate(home_team_win=ifelse(home_score>away_score, 1, 0)) %>%
dplyr::select("game_id","home_team_win")
df <- inner_join(y, new_pbp)
X <- model.matrix(home_team_win~., df)[, -1]
y <- df$home_team_win
glmnet(X, y, alpha=0, family = "binomial")
glmnet(x, y, family = "binomial", alpha = 1, lambda = NULL)
glmnet(X, y, family = "binomial", alpha = 1, lambda = NULL)
X
knitr::opts_chunk$set(echo = TRUE)
library(RCurl); library(xml2); library(rvest); library(jsonlite); library(foreach)
library(lubridate)
library(tidyverse)
source("EH_scrape_functions.R")
sched <- sc.scrape_schedule(start_date = Sys.Date()-1, end_date=Sys.Date())
df3 <- sc.scrape_pbp(games=c("2019030174"))
rt_probs_graph(model, df3$pbp_base, df3$game_info)
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- exp(predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id"))))
# prob_home_team_winging <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")), type="response")
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Odds Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
rt_probs_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
prob_home_team_winging <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")), type="response")
new_pbp <- cbind(new_pbp, prob_home_team_winging)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=prob_home_team_winging)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
rt_probs_graph(model, df3$pbp_base, df3$game_info)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl); library(xml2); library(rvest); library(jsonlite); library(foreach)
library(lubridate)
library(tidyverse)
source("EH_scrape_functions.R")
rt_probs_graph(model, df3$pbp_base, df3$game_info)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl); library(xml2); library(rvest); library(jsonlite); library(foreach)
library(lubridate)
library(tidyverse)
source("EH_scrape_functions.R")
events_summary <- read_csv("data/events_summary_df.csv")
game_info <- read_csv("data/game_info_df.csv")
pbp_base <- read_csv("data/pbp_base.csv")
pbp_extras <- read_csv("data/pbp_extras.csv")
player_periods <- read_csv("data/player_periods.csv")
player_shifts <- read_csv("data/player_shifts.csv")
report <- read_csv("data/report.csv")
roster <- read_csv("data/roster_df.csv")
scratches <- read_csv("data/scratches_df.csv")
# view(new_pbp %>% filter(game_id == gid))
data_pipeline <- function(pbp){
cols_to_select <- c("game_id", "game_seconds","home_team", "away_team",
"home_score", "away_score", "game_strength_state", "event_type")
events_to_remove <- c("GSTART", "GEND", "PSTART", "PEND")
new_pbp <- pbp %>%
filter(game_seconds > 0 & !event_type %in% events_to_remove) %>%
dplyr::select(all_of(cols_to_select)) %>%
mutate(GF = home_score) %>%
mutate(GA = away_score) %>%
mutate(num_home_players = str_extract(game_strength_state, "^.")) %>%
mutate(num_away_players = str_extract(game_strength_state, ".$")) %>%
mutate(num_home_players = ifelse(num_home_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_home_players)) %>%
mutate(num_away_players = ifelse(num_away_players == "E",
ifelse(game_seconds < 3600, "5", "3"),
num_away_players)) %>%
mutate(num_home_players = as.numeric(num_home_players)) %>%
mutate(num_away_players = as.numeric(num_away_players))
# dmy1 <- dummyVars("~home_team", data=new_pbp, fullRank = F)
# dmy2 <- dummyVars("~away_team", data=new_pbp, fullRank = F)
#
# home_team_dummy <- as_tibble(predict(dmy1, new_pbp))
# away_team_dummy <- as_tibble(predict(dmy2, new_pbp))
#
# new_pbp <- bind_cols(new_pbp, home_team_dummy, away_team_dummy)
new_pbp <- new_pbp %>% dplyr::select(-c("home_team", "away_team",
"event_type", "game_strength_state",
"home_score", "away_score"))
new_pbp <- type_convert(new_pbp)
}
new_pbp <- data_pipeline(pbp_base)
new_pbp %>% filter(game_id == "2018020001")
y <- game_info %>% mutate(home_team_win=ifelse(home_score>away_score, 1, 0)) %>%
dplyr::select("game_id","home_team_win")
df <- inner_join(y, new_pbp)
model <- glm(home_team_win~., data=df %>% dplyr::select(-c("game_id")), family="binomial")
summary(model)
saveRDS(model, "ingame_win_prob_model.RDS")
rt_odds_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
odds_home_team_winning <- exp(predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id"))))
# prob_home_team_winging <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")), type="response")
new_pbp <- cbind(new_pbp, odds_home_team_winning)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=odds_home_team_winning)) +
geom_line() + ggtitle(paste("In Game Odds Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
rt_probs_graph <- function(model, pbp, game_info){
new_pbp <- data_pipeline(pbp)
prob_home_team_winging <- predict(model, newdata = new_pbp %>% dplyr::select(-c("game_id")), type="response")
new_pbp <- cbind(new_pbp, prob_home_team_winging)
print(new_pbp)
ggplot(new_pbp, aes(x=game_seconds, y=prob_home_team_winging)) +
geom_line() + ggtitle(paste("In Game Win Probability Tracker ", game_info$away_team, " @ ",
game_info$home_team, ", ", game_info$game_date, sep="")) +
theme(plot.title = element_text(hjust = 0.5))
}
# gid <- "2018020005"
# df2 <- sc.scrape_pbp(games = c("2019030054"))
# # rt_odds_graph(model, pbp_base %>% dplyr::filter(game_id == gid), game_info %>% dplyr::filter(game_id == gid))
# rt_odds_graph(model, df2$pbp_base, df2$game_info_df)
# rt_probs_graph(model, df2$pbp_base, df2$game_info_df)
sched <- sc.scrape_schedule(start_date = Sys.Date()-1, end_date=Sys.Date())
df3 <- sc.scrape_pbp(games=c("2019030174"))
rt_probs_graph(model, df3$pbp_base, df3$game_info)
shiny::runApp('C:/Users/yatha/OneDrive/Desktop/Workspaces/r_workspace/hockey_stuff/shinyapp')
runApp('C:/Users/yatha/OneDrive/Desktop/Workspaces/r_workspace/hockey_stuff/shinyapp')
setwd("C:/Users/yatha/OneDrive/Desktop/Workspaces/r_workspace/hockey_stuff/shinyapp")
runApp()
runApp()
runApp()
traceback()
traceback
traceback()
celar
runApp()
traceback()
